{"version":3,"sources":["logo.svg","button/Button.jsx","utils/isPastDay.js","header/Header.jsx","icons/arrow-left.svg","icons/arrow-right.svg","calendar/Calendar.jsx","utils/workingHours.js","scedule/utils/index.js","scedule/scedule-header/SceduleHeader.jsx","scedule/scedule-aside/scedule-label/SceduleLabel.jsx","utils/formatEventData.js","scedule/scedule-timeline/scedule-event/SceduleEvent.jsx","utils/getDateWithResetTime.js","scedule/scedule-timeline/ButtonToCreateEvent.jsx","scedule/scedule-timeline/SceduleTimeline.jsx","scedule/scedule-aside/SceduleAside.jsx","queries.js","scedule/Scedule.jsx","icons/cross.svg","participant-select/ParticipantSelect.jsx","room-select/RoomSelect.jsx","input-date/InputDate.jsx","form-event/FormEventView.jsx","form-event/FormEventContainer.jsx","hooks/useModalSevice/EventSuccess.jsx","form-event/FormEventApollo.jsx","hooks/useModalSevice/index.js","App.js","index.js"],"names":["Button","children","className","otherProps","cls","split","push","join","trim","date","isPast","endOfDay","Header","pickedDateStart","useReactiveVar","pickedDateStartVar","showBtnPaths","currentPath","useLocation","pathname","to","src","logo","alt","includes","disabled","isPastDate","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","stroke","strokeWidth","fill","fillRule","strokeLinecap","strokeOpacity","SvgArrowLeft","_ref","svgRef","title","titleId","props","width","height","xmlns","ref","id","ForwardRef","SvgArrowRight","CustomInput","value","onClick","onNextDay","onPrevDay","month","day","year","today","isToday","parse","Date","locale","ru","parseInt","slice","toUpperCase","formatMonth","dangerouslySetInnerHTML","__html","format","CustomInputWithRef","forwardRef","Calendar","onChange","initialDate","useState","setDate","useEffect","console","log","dateFormat","selected","monthsShown","customInput","addDays","subDays","start","end","getCorrectDate","set","hours","getHours","minutes","getMinutes","startOfTomorrow","getPercentsDistanceOfMin","timeStart","workingHours","timeEnd","differenceInMinutes","minutesToPcDistance","minutesToPcLeftOffset","DISABLED_HOURS","percentOffsetToTime","percentOffset","Math","ceil","SceduleHeader","numberOfHours","differenceInHours","hourLabels","Array","from","_","toString","firstLabel","unshift","getHourLabels","getCurrentTime","toLocaleTimeString","timerId","useRef","currentTime","setCurrentTime","current","setInterval","clearInterval","minutesAgo","showCurrentTime","isPastDay","setPickedDateStartVar","map","h","style","left","SceduleLabel","subtitle","formatDate","formatTimeStartEnd","dateStart","dateEnd","formatedDateStart","formatedDateEnd","formatRoom","room","roomTitle","getRoomTitle","SceduleEvent","users","history","useHistory","firstUser","data-tip","data-for","data-place","effect","backgroundColor","avatarUrl","login","getDateWithResetTime","ButtonToCreateEvent","percentages","zIndex","position","ms","dateWithResetTime","addMilliseconds","pickedRoomVar","SceduleTimeline","forRoom","events","show","btnProps","setBtnProps","ReactCursorPosition","onPositionChanged","widthEl","elementDimensions","isPositionOutside","timeMs","x","toFixed","eventExistOnThisPoint","time","floor","specifiedDate","getFullYear","getMonth","getDate","e","some","isEventExistAtTime","pointOnPassedTime","startOfDay","shouldDecorateChildren","SceduleAside","asideRef","handleScroll","classList","toggle","scrollLeft","app","document","querySelector","addEventListener","removeEventListener","USER_FIELDS","gql","ROOM_FIELDS","EVENT_FIELDS","FETCH_DATA_FOR_EVENT_FORM","GET_EVENT","CREATE_EVENT","UPDATE_EVENT","FETCH_EVENTS_BY_DATE","FETCH_ALL_ROOMS","Scedule","useQuery","variables","dataEvents","data","loading","error","dataRooms","loadingRooms","errorRooms","eventsOnDate","rooms","stageNmbs","floorNmbs","r","uniq","getStageNmbs","sort","a","b","roomNames","timelines","forEach","stageNmb","roomsOnFloor","filter","roomNamesChunk","capacity","timelinesChunk","roomEvents","renderColumnsContent","SvgCross","viewBox","ParticipantSelect","candidates","limit","selectedPeople","onSelectedItemsChange","inputValue","setInputValue","useMultipleSelection","selectedItems","getSelectedItemProps","getDropdownProps","addSelectedItem","removeSelectedItem","getFilteredItems","user","sI","toLowerCase","startsWith","useCombobox","defaultHighlightedIndex","items","onStateChange","type","selectedItem","stateChangeTypes","InputChange","InputKeyDownEnter","ItemClick","InputBlur","selectItem","isOpen","getToggleButtonProps","getMenuProps","getLabelProps","getInputProps","getComboboxProps","highlightedIndex","getItemProps","preventKeyAction","aria-label","person","index","preventDefault","stopPropagation","RoomSelect","selectedRoom","onSelect","useSelect","onSelectedItemChange","renderItem","item","InputDate","selectedDate","startTime","setStartTime","endTime","setEndTime","minDate","minTime","maxTime","computeStartEndDate","addMinutes","add","htmlFor","handleChangeDate","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","FormEventView","participantSelectOptions","roomSelectOptions","participantsLimit","reactHookFormProps","onSubmit","isCreateMode","control","register","handleSubmit","errors","Controller","controller","watchParticipantList","message","name","placeholder","participantList","render","FormEventContainer","initialData","defaultValues","startEndDate","dateObj","getInitialStartEndDate","setParticipantsLimit","validationSchema","Yup","shape","required","min","max","useForm","resolver","yupResolver","watch","reset","watchRoom","input","usersIds","p","roomId","EventSuccess","open","event","hide","onAccept","action","animationDuration","center","showCloseIcon","classNames","overlay","modal","role","dateStartISO","dateEndISO","getFormattedEventDate","getFormattedEventRoom","FormEventApollo","ModalService","eventSuccProps","setEventSuccProps","useModal","in","hideSuccessEvent","showSuccessEvent","eventSucc","createdEventSuccess","updatedEventSuccess","useModalService","optionsData","errorFetchData","loadingFetchData","useMutation","onCompleted","createdEvent","createEvent","createEventMutation","pendingCreateEvent","errorCreateEvent","updatedEvent","updateEvent","updateEventMutation","pendingUpdateEvent","errorUpdateEvent","useParams","skip","eventData","errorGetExistedEvent","loadingExistedEvent","update","cache","parseISO","readQuery","query","writeQuery","App","path","exact","makeVar","client","ApolloClient","uri","InMemoryCache","typePolicies","Event","fields","read","dateISO","connectToDevTools","ReactDOM","StrictMode","rootComponent","TransitionGroup","getElementById"],"mappings":"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","file":"static/js/main.3446114b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.d27e5f2e.svg\";","import \"./Button.css\";\n\nfunction Button({ children, className = \"\", ...otherProps }) {\n  let cls = className.split(\" \");\n  cls.push(\"btn\");\n  cls = cls.join(\" \").trim();\n\n  return (\n    <button className={cls} {...otherProps}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","import { endOfDay, isPast } from \"date-fns\";\n\nexport default (date) => {\n  return isPast(endOfDay(date));\n};\n","import logo from \"../logo.svg\";\nimport Button from \"../button/Button\";\nimport \"./Header.css\";\n\nimport { Link, useLocation } from \"react-router-dom\";\nimport { pickedDateStartVar } from \"..\";\nimport { useReactiveVar } from \"@apollo/client\";\n\nimport isPastDate from \"../utils/isPastDay\";\n\nfunction Header() {\n  const pickedDateStart = useReactiveVar(pickedDateStartVar);\n\n  const showBtnPaths = ['/']\n\n  const currentPath = useLocation().pathname\n\n  const renderButton = () => {\n    if (showBtnPaths.includes(currentPath)) {\n      return (\n        <Button disabled={isPastDate(pickedDateStart)}>\n          Создать встречу\n        </Button> \n      )\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__inner\">\n        <Link to=\"/\">\n          <img src={logo} alt=\"Logo\" />\n        </Link>\n        <Link to=\"/event/add\">\n          {renderButton()}\n        </Link>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10.243L1.757 6 6 1.757h0\",\n  stroke: \"#000\",\n  strokeWidth: 2,\n  fill: \"none\",\n  fillRule: \"evenodd\",\n  strokeLinecap: \"round\",\n  strokeOpacity: 0.428\n});\n\nfunction SvgArrowLeft(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 7,\n    height: 12,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.a1c8ae2a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1 1.757L5.243 6 1 10.243h0\",\n  stroke: \"#000\",\n  strokeWidth: 2,\n  fill: \"none\",\n  fillRule: \"evenodd\",\n  strokeLinecap: \"round\",\n  strokeOpacity: 0.428\n});\n\nfunction SvgArrowRight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 7,\n    height: 12,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.6b2c58d5.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, forwardRef, useEffect } from \"react\";\nimport \"./Calendar.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { parse, addDays, subDays, isToday } from \"date-fns\";\nimport ru from \"date-fns/locale/ru\";\nimport { ReactComponent as ArrowLeftIcon } from \"../icons/arrow-left.svg\";\nimport { ReactComponent as ArrowRightIcon } from \"../icons/arrow-right.svg\";\n\nfunction CustomInput({ value, onClick, onNextDay, onPrevDay }, _ref) {\n  const format = (value) => {\n    // value = MMMM/dd/yyyy\n    const [month, day, year] = value.split(\"/\");\n\n    const today = isToday(\n      parse(value, \"MMMM/dd/yyyy\", new Date(), { locale: ru })\n    );\n\n    const formatMonth = (month) =>\n      month.slice(0, 1).toUpperCase() + month.slice(1, 3);\n\n    return (\n      <span>\n        {parseInt(day) + \" \" + formatMonth(month)}\n        {\"\\u00A0\"}\n        <i dangerouslySetInnerHTML={{ __html: \"&#183;\" }}></i>\n        {\"\\u00A0\"}\n        {today ? \"Сегодня\" : year}\n      </span>\n    );\n  };\n  return (\n    <div className=\"calendar\">\n      <button\n        className=\"calendar__btn-arrow calendar__btn-arrow--left\"\n        onClick={() => onPrevDay()}\n      >\n        <ArrowLeftIcon className=\"calendar-btn__arrow-icon\" />\n      </button>\n      <button className=\"calendar__btn-dropdown\" onClick={onClick}>\n        {format(value)}\n      </button>\n      <button\n        className=\"calendar__btn-arrow calendar__btn-arrow--right\"\n        onClick={() => onNextDay()}\n      >\n        <ArrowRightIcon className=\"calendar-btn__arrow-icon\" />\n      </button>\n    </div>\n  );\n}\n\nconst CustomInputWithRef = forwardRef(CustomInput);\n\nfunction Calendar({ onChange, initialDate = new Date() }) {\n  const [date, setDate] = useState(initialDate);\n\n  useEffect(() => {\n    onChange(date);\n    console.log(\"Calendar date\", date);\n  }, [date]);\n\n  return (\n    <DatePicker\n      locale={ru}\n      dateFormat=\"MMMM/dd/yyyy\"\n      selected={date}\n      onChange={setDate}\n      monthsShown={3}\n      customInput={\n        <CustomInputWithRef\n          onNextDay={() => setDate(addDays(date, 1))}\n          onPrevDay={() => setDate(subDays(date, 1))}\n        />\n      }\n    />\n  );\n}\n\nexport default Calendar;\n","import { parse } from \"date-fns\";\nimport { set, startOfTomorrow } from \"date-fns\";\n\nconst start = parse(\"8:00\", \"H:mm\", new Date());\nconst end = parse(\"23:00\", \"H:mm\", new Date());\n\nconst getCorrectDate = () => {\n  const date = new Date();\n\n  if (\n    date < set(date, { hours: start.getHours(), minutes: start.getMinutes() })\n  ) {\n    return set(date, { hours: start.getHours(), minutes: start.getMinutes() });\n  }\n\n  if (date > set(date, { hours: end.getHours(), minutes: end.getMinutes() })) {\n    return startOfTomorrow();\n  }\n  return date;\n};\n\nexport default {\n  start,\n  end,\n  getCorrectDate,\n};\n","import {\n  differenceInMinutes,\n  getHours,\n  getMinutes,\n  startOfDay,\n  addMilliseconds,\n  isPast,\n} from \"date-fns\";\nimport { pickedDateStartVar } from \"../..\";\n\nimport workingHours from \"../../utils/workingHours\";\n\n// на графике по краям имеются неактивные получасовые промежутки-отступы,\n// которые прибавляет час к времянной дистанции, но не участвуют\n// в определении времени\nconst DISABLED_HOURS = 60;\n// получасовой отступ на графике с лева и права\nconst HALF_HOURS_PADDING = DISABLED_HOURS / 2;\nfunction getPercentsDistanceOfMin() {\n  const timeStart = workingHours.start;\n  const timeEnd = workingHours.end;\n\n  const diff = differenceInMinutes(timeEnd, timeStart);\n\n  // плюс час, который складывается из\n  // двух отступов по краям\n  return 100 / (diff + DISABLED_HOURS);\n}\n\nfunction minutesToPcDistance(minutes) {\n  return minutes * getPercentsDistanceOfMin();\n}\n\nfunction minutesToPcLeftOffset(minutes) {\n  return minutesToPcDistance(minutes + HALF_HOURS_PADDING);\n}\n\nfunction getTimeInMins(date) {\n  return getHours(date) * 60 + getMinutes(date);\n}\n\nfunction percentOffsetToTime(percentOffset) {\n  const minToMs = (min) => (min - 30) * 60 * 1000;\n\n  return (\n    minToMs(Math.ceil(percentOffset / getPercentsDistanceOfMin())) +\n    workingHours.start.getHours() * 60 * 60 * 1000 +\n    workingHours.start.getMinutes() * 60 * 1000\n  );\n}\n\nfunction isEventExistAtTime(time, events) {\n  if (!events.length) return false;\n\n  const date = events[0].dateStart;\n\n  const hours = Math.floor(time / 1000 / 60 / 60);\n  time -= hours * 60 * 60 * 1000;\n  const minutes = Math.floor(time / 1000 / 60);\n\n  const specifiedDate = new Date(\n    date.getFullYear(),\n    date.getMonth(),\n    date.getDate(),\n    hours,\n    minutes\n  );\n\n  return events\n    .map((e) => {\n      return {\n        ...e,\n      };\n    })\n    .some(\n      (e) =>\n        e.dateStart === specifiedDate ||\n        e.dateEnd === specifiedDate ||\n        (e.dateStart < specifiedDate && e.dateEnd > specifiedDate)\n    );\n}\n\nfunction isPassedTime(timeMs) {\n  return isPast(addMilliseconds(startOfDay(pickedDateStartVar()), timeMs));\n}\n\nexport {\n  minutesToPcLeftOffset,\n  minutesToPcDistance,\n  percentOffsetToTime,\n  isEventExistAtTime,\n  getTimeInMins,\n  isPassedTime,\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport \"./SceduleHeader.css\";\nimport Calendar from \"../../calendar/Calendar\";\n\nimport {\n  differenceInMinutes,\n  differenceInHours,\n  parse,\n  getHours,\n  format,\n  addMinutes,\n  set,\n  isToday,\n} from \"date-fns\";\n\nimport workingHours from \"../../utils/workingHours\";\nimport { pickedDateStartVar } from \"../../index\";\nimport isPastDay from \"../../utils/isPastDay\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { minutesToPcLeftOffset } from \"../utils\";\n\nfunction SceduleHeader() {\n  const timeStart = workingHours.start;\n  const timeEnd = workingHours.end;\n\n  const pickedDateStart = useReactiveVar(pickedDateStartVar);\n\n  const setPickedDateStartVar = (date) => {\n    if (!isToday(date)) {\n      date = set(date, {\n        hours: workingHours.start.getHours(),\n        minutes: workingHours.start.getMinutes(),\n      });\n    }\n\n    pickedDateStartVar(date);\n  };\n\n  const numberOfHours = differenceInHours(timeEnd, timeStart);\n\n  const getHourLabels = () => {\n    const hourLabels = Array.from({ length: numberOfHours }, (_, i) =>\n      (getHours(timeStart) + i + 1).toString()\n    );\n\n    const firstLabel = format(timeStart, \"H:mm\");\n\n    hourLabels.unshift(firstLabel);\n\n    return hourLabels;\n  };\n\n  const hourLabels = getHourLabels();\n\n  //часы\n  const getCurrentTime = () => {\n    const d = new Date();\n    return d.toLocaleTimeString().slice(0, 5);\n  };\n\n  const timerId = useRef();\n  const [currentTime, setCurrentTime] = useState(getCurrentTime());\n\n  useEffect(() => {\n    timerId.current = setInterval(() => setCurrentTime(getCurrentTime()), 1000);\n    return () => clearInterval(timerId.current);\n  }, []);\n\n  const minutesAgo = differenceInMinutes(\n    parse(currentTime, \"H:mm\", new Date()),\n    timeStart\n  );\n\n  const handleChangeCalendar = (date) => {\n    setPickedDateStartVar(date);\n  };\n\n  const showCurrentTime = !isPastDay(pickedDateStart);\n  return (\n    <div className=\"scedule__header\">\n      <Calendar onChange={handleChangeCalendar} initialDate={pickedDateStart} />\n      <div className=\"timeline\">\n        {hourLabels.map((h) => (\n          <div key={h} className=\"timeline-label\">\n            {h}\n          </div>\n        ))}\n\n        {showCurrentTime && (\n          <div\n            className=\"timeline__mark timeline__mark--current-time\"\n            style={{\n              left: minutesToPcLeftOffset(minutesAgo) + \"%\",\n            }}\n          >\n            {currentTime}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SceduleHeader;\n","import \"./SceduleLabel.css\";\n\nfunction SceduleLabel({ title, subtitle }) {\n  return (\n    <div className=\"scedule__label\">\n      <div className=\"scedule__label-title\">{title}</div>\n      <div className=\"scedule__label-subtitle\">{`до ${subtitle} человек`}</div>\n    </div>\n  );\n}\n\nexport default SceduleLabel;\n","import { format } from \"date-fns\";\nimport ru from \"date-fns/locale/ru\";\n\nexport const formatDate = (date) => {\n  return format(date, \"d MMMM\", { locale: ru });\n};\n\nexport const formatTimeStartEnd = (dateStart, dateEnd) => {\n  const formatedDateStart = format(dateStart, \"H:mm\");\n\n  const formatedDateEnd = format(dateEnd, \"H:mm\");\n\n  return `${formatedDateStart} ${\"\\u2014\"} ${formatedDateEnd}`;\n};\n\nexport const getRoomTitle = (room) => room.title;\n\nexport const formatRoom = (room) => {\n  const roomTitle = getRoomTitle(room);\n\n  return roomTitle[0].toUpperCase() + roomTitle.slice(1);\n};\n","import \"./SceduleEvent.css\";\nimport { minutesToPcDistance, minutesToPcLeftOffset } from \"../../utils\";\nimport workingHours from \"../../../utils/workingHours\";\nimport {\n  formatDate,\n  formatTimeStartEnd,\n  formatRoom,\n} from \"../../../utils/formatEventData\";\n\nimport { isPast, differenceInMinutes, set } from \"date-fns\";\n\nimport ReactTooltip from \"react-tooltip\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction SceduleEvent({ id, title, dateStart, dateEnd, users = [], room }) {\n  const calculateWidth = () => {\n    const duration = differenceInMinutes(dateEnd, dateStart);\n    return minutesToPcDistance(duration);\n  };\n\n  const calculateLeft = () => {\n    const mins = differenceInMinutes(\n      set(new Date, {\n        hours: dateStart.getHours(),\n        minutes: dateStart.getMinutes()\n      }), \n      workingHours.start\n    );\n\n    return minutesToPcLeftOffset(mins);\n  };\n\n  const history = useHistory();\n\n  const edit = () => {\n    history.push(`/event/edit/${id}`);\n  };\n\n  const firstUser = users[0];\n  return (\n    <div\n      className=\"scedule-event\"\n      style={{\n        left: calculateLeft() + \"%\",\n        width: calculateWidth() + \"%\",\n      }}\n      onClick={() => !isPast(dateStart) && edit()}\n      data-tip\n      data-for={\"scedule-event__info\" + id}\n      data-place=\"bottom\"\n    >\n      <ReactTooltip\n        id={\"scedule-event__info\" + id}\n        className=\"scedule-event__info\"\n        effect=\"solid\"\n        backgroundColor=\"white\"\n      >\n        <h4 className=\"scedule-event__info-title\">{title}</h4>\n        <div className=\"scedule-event__info-details\">\n          {`${formatDate(dateStart)}, ${formatTimeStartEnd(\n            dateStart,\n            dateEnd\n          )} ${\"\\u00B7\"} ${formatRoom(room)}`}\n        </div>\n        {firstUser && (\n          <div className=\"scedule-event__info-footer\">\n            <img\n              className=\"avatar-icon\"\n              src={firstUser.avatarUrl.trim()}\n              alt=\"participant\"\n            />\n            <div className=\"participants\">\n              {firstUser.login} из {users.length} участников\n            </div>\n          </div>\n        )}\n      </ReactTooltip>\n    </div>\n  );\n}\n\nexport default SceduleEvent;\n","import { set } from \"date-fns\";\n\nfunction getDateWithResetTime(date) {\n  return set(date, { hours: 0, minutes: 0 });\n}\n\nexport default getDateWithResetTime;\n","import Button from \"../../button/Button\";\n\nimport { percentOffsetToTime } from \"../utils\";\n\nimport { addMilliseconds } from \"date-fns\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { pickedDateStartVar, pickedRoomVar } from \"../../index\";\nimport getDateWithResetTime from \"../../utils/getDateWithResetTime\";\n\nfunction ButtonToCreateEvent({ left, room }) {\n  const history = useHistory();\n\n  const calculateLeft = (percentages) => {\n    const left = percentages;\n\n    return left < 0 ? 0 : left;\n  };\n\n  const handleClick = () => {\n    const ms = percentOffsetToTime(left);\n    const dateWithResetTime = getDateWithResetTime(pickedDateStartVar());\n\n    pickedDateStartVar(addMilliseconds(dateWithResetTime, ms));\n\n    pickedRoomVar(room);\n\n    history.push(\"/event/add\");\n  };\n\n  return (\n    <Button\n      style={{\n        height: \"100%\",\n        zIndex: 10,\n        position: \"absolute\",\n        left: calculateLeft(left) + \"%\",\n      }}\n      onClick={handleClick}\n    >\n      +\n    </Button>\n  );\n}\n\nexport default ButtonToCreateEvent;\n","import { useState } from \"react\";\nimport \"./SceduleTimeline.css\";\nimport SceduleEvent from \"./scedule-event/SceduleEvent\";\nimport ButtonToCreateEvent from \"./ButtonToCreateEvent\";\n\nimport ReactCursorPosition from \"react-cursor-position\";\n\nimport {\n  percentOffsetToTime,\n  isEventExistAtTime,\n  isPassedTime,\n} from \"../utils\";\n\nfunction SceduleTimeline({ forRoom = null, events = [] }) {\n  // кнопка \"создать встречу\", которая будет появляться\n  // при наведении на свободное время\n  const [btnProps, setBtnProps] = useState({\n    show: false,\n    left: 0,\n  });\n\n  const getPercentOffsetRelativeToParent = (cursorX, parent) => {\n    return (cursorX / (parent / 100)).toFixed(4);\n  };\n\n  const handleCursorPositionChange = (props) => {\n    // ширина контейнера с событиями\n    // соотносится с временной шкалой\n    const widthEl = props?.elementDimensions?.width;\n\n    if (props.isPositionOutside || !widthEl) {\n      setBtnProps({\n        show: false,\n      });\n\n      return;\n    }\n\n    const x = props.position.x;\n\n    const percentOffset = getPercentOffsetRelativeToParent(x, widthEl);\n\n    const eventExistOnThisPoint = isEventExistAtTime(\n      percentOffsetToTime(percentOffset),\n      events\n    );\n\n    const pointOnPassedTime = isPassedTime(percentOffsetToTime(percentOffset));\n\n    if (!eventExistOnThisPoint && !pointOnPassedTime) {\n      setBtnProps({\n        show: true,\n        left: percentOffset,\n      });\n    } else {\n      setBtnProps({\n        show: false,\n      });\n    }\n  };\n\n  return (\n    <ReactCursorPosition\n      className=\"scedule__timeline\"\n      onPositionChanged={handleCursorPositionChange}\n      shouldDecorateChildren={false}\n    >\n      {events.map(({ id, dateStart, dateEnd, ...otherProps }) => (\n        <SceduleEvent\n          id={id}\n          key={id}\n          dateStart={dateStart}\n          dateEnd={dateEnd}\n          {...otherProps}\n        />\n      ))}\n\n      {btnProps.show && (\n        <ButtonToCreateEvent left={btnProps.left} room={forRoom} />\n      )}\n    </ReactCursorPosition>\n  );\n}\n\nexport default SceduleTimeline;\n","import { useEffect, useRef } from \"react\";\nimport \"./SceduleAside.css\";\n\nfunction SceduleAside({ children }) {\n  const asideRef = useRef();\n  useEffect(() => {\n    const handleScroll = (e) =>\n      asideRef.current?.classList.toggle(\"hidden\", e.target.scrollLeft > 300)\n\n    const app = document.querySelector(\".scroll-listen-aside\");\n\n    app.addEventListener(\"scroll\", handleScroll);\n\n    return () => \n      app.removeEventListener(\"scroll\", handleScroll)\n  }, []);\n\n  return (\n    <div className=\"scedule__aside\" ref={asideRef}>\n      {children}\n    </div>\n  );\n}\n\nexport default SceduleAside;\n","import { gql } from \"@apollo/client\";\n\nconst USER_FIELDS = gql`\n  fragment userFields on User {\n    id\n    login\n    avatarUrl\n    homeFloor\n  }\n`;\nconst ROOM_FIELDS = gql`\n  fragment roomFields on Room {\n    id\n    title\n    capacity\n    floor\n  }\n`;\n\nconst EVENT_FIELDS = gql`\n  fragment eventFields on Event {\n    id\n    title\n    dateStart\n    dateEnd\n    room {\n      ...roomFields\n    }\n    users {\n      ...userFields\n    }\n  }\n  ${ROOM_FIELDS}\n  ${USER_FIELDS}\n`;\n\nexport const FETCH_DATA_FOR_EVENT_FORM = gql`\n  query {\n    users {\n      ...userFields\n    }\n    rooms {\n      ...roomFields\n    }\n  }\n  ${USER_FIELDS}\n  ${ROOM_FIELDS}\n`;\n\nexport const GET_EVENT = gql`\n  query event($id: ID!) {\n    event(id: $id) {\n      ...eventFields\n    }\n  }\n  ${EVENT_FIELDS}\n`;\n\nexport const CREATE_EVENT = gql`\n  mutation createEvent($input: EventInput!, $usersIds: [ID], $roomId: ID!) {\n    createEvent(input: $input, usersIds: $usersIds, roomId: $roomId) {\n      ...eventFields\n    }\n  }\n  ${EVENT_FIELDS}\n`;\nexport const UPDATE_EVENT = gql`\n  mutation updateEvent($id: ID!, $input: EventInput!) {\n    updateEvent(id: $id, input: $input) {\n      ...eventFields\n    }\n  }\n  ${EVENT_FIELDS}\n`;\n\nexport const FETCH_EVENTS_BY_DATE = gql`\n  query eventsOnDate($date: Date!) {\n    eventsOnDate(date: $date) {\n      ...eventFields\n    }\n  }\n  ${EVENT_FIELDS}\n`;\n\nexport const FETCH_ALL_ROOMS = gql`\n  query {\n    rooms {\n      ...roomFields\n    }\n  }\n  ${ROOM_FIELDS}\n`;\n","import \"./Scedule.css\";\n\nimport SceduleHeader from \"./scedule-header/SceduleHeader\";\nimport SceduleLabel from \"./scedule-aside/scedule-label/SceduleLabel\";\nimport SceduleTimeline from \"./scedule-timeline/SceduleTimeline\";\nimport SceduleAside from \"./scedule-aside/SceduleAside\";\n\nimport { uniq } from \"lodash\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\n\nimport { FETCH_EVENTS_BY_DATE, FETCH_ALL_ROOMS } from \"../queries.js\";\n\nimport { endOfDay } from \"date-fns\";\n\nimport { pickedDateStartVar } from \"..\";\n\nfunction Scedule() {\n  const date = endOfDay(useReactiveVar(pickedDateStartVar));\n  console.log(\"pickedDateStartVar\", date);\n  const { data: dataEvents, loading, error } = useQuery(FETCH_EVENTS_BY_DATE, {\n    variables: { date },\n  });\n\n  const {\n    data: dataRooms,\n    loading: loadingRooms,\n    error: errorRooms,\n  } = useQuery(FETCH_ALL_ROOMS);\n\n  if (loading || loadingRooms) return \"Loading...\";\n\n  if (error || errorRooms) {\n    console.error(error);\n    return \"Error\";\n  }\n\n  const { eventsOnDate: events } = dataEvents;\n  const { rooms } = dataRooms;\n\n  const getStageNmbs = () => {\n    const floorNmbs = rooms.map((r) => r.floor);\n\n    return uniq(floorNmbs);\n  };\n  const stageNmbs = getStageNmbs().sort((a, b) => a - b);\n\n  const getRoomsOnFloor = (floor) =>\n    rooms.filter((room) => room.floor === floor);\n\n  const renderColumnsContent = () => {\n    const roomNames = [];\n    const timelines = [];\n\n    stageNmbs.forEach((stageNmb) => {\n      // const sceduleGroupLabel =\n      //     <SceduleGroupLabel {...stageNmb} />\n\n      const roomsOnFloor = getRoomsOnFloor(stageNmb);\n\n      const roomNamesChunk = roomsOnFloor.map((room) => (\n        <SceduleLabel\n          key={room.id}\n          title={room.title}\n          subtitle={room.capacity}\n        />\n      ));\n\n      const timelinesChunk = roomsOnFloor.map((room) => {\n        const roomEvents = events.filter((e) => e.room.id === room.id);\n\n        return (\n          <SceduleTimeline key={room.id} forRoom={room} events={roomEvents} />\n        );\n      });\n\n      roomNames.push(\n        // sceduleGroupLabel,\n        ...roomNamesChunk\n      );\n\n      timelines.push(...timelinesChunk);\n    });\n\n    return [roomNames, timelines];\n  };\n\n  const [roomNames, timelines] = renderColumnsContent();\n\n  return (\n    <div className=\"scedule\">\n      <SceduleHeader />\n      <div className=\"scedule__content\">\n        <SceduleAside>{roomNames}</SceduleAside>\n        <div className=\"scedule__timelines\">{timelines}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Scedule;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n});\n\nfunction SvgCross(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCross);\nexport default __webpack_public_path__ + \"static/media/cross.53c9f4b6.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\nimport \"./ParticipantSelect.css\";\n\nimport { useCombobox, useMultipleSelection } from \"downshift\";\nimport { ReactComponent as CrossIcon } from \"../icons/cross.svg\";\n\nfunction ParticipantSelect({\n  className = \"\",\n  candidates = [],\n  limit = candidates.length,\n  selectedPeople = [],\n  onSelectedItemsChange,\n}) {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const {\n    getSelectedItemProps,\n    getDropdownProps,\n    addSelectedItem,\n    removeSelectedItem,\n    selectedItems,\n  } = useMultipleSelection({\n    selectedItems: selectedPeople,\n    onSelectedItemsChange,\n    // onSelectedItemsChange: (o) => {\n    //   console.log(o)\n    //   switch (o.type) {\n    //     case useMultipleSelection.stateChangeTypes.SelectedItemKeyDownBackspace:\n    //     case useMultipleSelection.stateChangeTypes.SelectedItemKeyDownDelete:\n    //         onRemoveSelectedItem(inputValue)\n    //         break\n    //     default:\n    //         break\n    //   }\n    // }\n  });\n\n  const getFilteredItems = () => {\n    return candidates.filter(\n      (user) =>\n        !selectedItems.some((sI) => sI.id === user.id) &&\n        user.login.toLowerCase().startsWith(inputValue.toLowerCase())\n    );\n  };\n\n  const {\n    isOpen,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    highlightedIndex,\n    getItemProps,\n    selectItem,\n  } = useCombobox({\n    inputValue,\n    defaultHighlightedIndex: 0, // after selection, highlight the first item.\n    items: getFilteredItems(),\n    onStateChange: ({ inputValue, type, selectedItem }) => {\n      switch (type) {\n        case useCombobox.stateChangeTypes.InputChange:\n          setInputValue(inputValue);\n          break;\n        case useCombobox.stateChangeTypes.InputKeyDownEnter:\n        case useCombobox.stateChangeTypes.ItemClick:\n        case useCombobox.stateChangeTypes.InputBlur:\n          if (selectedItem && selectedItems.length < limit) {\n            setInputValue(\"\");\n            addSelectedItem(selectedItem);\n          }\n\n          selectItem(null);\n          break;\n        default:\n          break;\n      }\n    },\n  });\n\n  return (\n    <>\n      <div className=\"participant-select\">\n        <div>\n          <div {...getComboboxProps()}>\n            <input\n              className={className}\n              {...getInputProps(getDropdownProps({ preventKeyAction: isOpen }))}\n            />\n            <button\n              type=\"button\"\n              className=\"participant-select__btn\"\n              {...getToggleButtonProps()}\n              aria-label=\"toggle menu\"\n            >\n              &#9660;\n            </button>\n          </div>\n        </div>\n        <ul {...getMenuProps()}>\n          {isOpen &&\n            getFilteredItems().map((person, index) => (\n              <li\n                style={\n                  highlightedIndex === index\n                    ? { backgroundColor: \"#bde4ff\" }\n                    : {}\n                }\n                {...getItemProps({\n                  key: person.id,\n                  index,\n                  onClick: (e) => console.log(e),\n                })}\n              >\n                {person.login}\n              </li>\n            ))}\n        </ul>\n      </div>\n      <ul className=\"participant-list\">\n        {selectedItems.map((selectedItem, index) => (\n          <li\n            className=\"participant-chip\"\n            key={selectedItem.id}\n            {...getSelectedItemProps({ index })}\n          >\n            <img\n              className=\"avatar-icon\"\n              src={selectedItem.avatarUrl.trim()}\n              alt=\"avatar\"\n            />\n            <div className=\"participant-chip__name\">{selectedItem.login}</div>\n            <button\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                removeSelectedItem(selectedItem);\n              }}\n            >\n              <CrossIcon className=\"participant-chip__cross-icon\" />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default ParticipantSelect;\n","import React from \"react\";\nimport \"./RoomSelect.css\";\nimport { useSelect } from \"downshift\";\n\nfunction RoomSelect({ className = \"\", selectedRoom, rooms = [], onSelect }) {\n  const {\n    getToggleButtonProps,\n    getMenuProps,\n    getItemProps,\n    selectedItem,\n    isOpen,\n    highlightedIndex,\n  } = useSelect({\n    selectedItem: selectedRoom,\n    items: rooms,\n    onSelectedItemChange: ({ selectedItem }) => onSelect(selectedItem),\n  });\n\n  const renderItem = (item) => {\n    const { title, floor } = item;\n\n    return <>{`${title}${\"\\u00A0\"}${\"\\u00B7\"}${\"\\u00A0\"}${floor} Этаж`}</>;\n  };\n\n  return (\n    <div className=\"room-select\">\n      <div>\n        <button\n          type=\"button\"\n          className={className + \" room-select__btn\"}\n          {...getToggleButtonProps()}\n          aria-label=\"toggle menu\"\n        >\n          {!selectedItem ? \"выберите комнату\" : renderItem(selectedItem)}\n        </button>\n        <i className=\"icon-arrow\">&#9660;</i>\n      </div>\n      <ul {...getMenuProps()}>\n        {isOpen &&\n          rooms.map((item, index) => (\n            <li\n              key={`${item.id}${index}`}\n              {...getItemProps({ item, index })}\n              style={\n                highlightedIndex === index ? { backgroundColor: \"#bde4ff\" } : {}\n              }\n            >\n              {renderItem(item)}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default RoomSelect;\n","import { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { add, addMinutes, getHours, getMinutes, isToday } from \"date-fns\";\nimport ru from \"date-fns/locale/ru\";\nimport \"./InputDate.css\";\n\nimport getDateWithResetTime from \"../utils/getDateWithResetTime\";\nimport workingHours from \"../utils/workingHours\";\n\nfunction InputDate({\n  onChange,\n  //{dateStart, dateEnd}\n  selectedDate,\n}) {\n  console.log(\"initial Date\", selectedDate);\n  const [date, setDate] = useState(selectedDate.dateStart);\n  const [startTime, setStartTime] = useState(selectedDate.dateStart);\n  const [endTime, setEndTime] = useState(selectedDate.dateEnd);\n\n  const minDate = new Date();\n  const minTime = isToday(date) ? date : workingHours.start;\n  const maxTime = workingHours.end;\n\n  const handleChangeDate = (date) => {\n    let d;\n\n    if (isToday(date)) {\n      d = workingHours.getCorrectDate();\n      setStartTime(d);\n    } else {\n      d = date;\n      setStartTime(workingHours.start);\n    }\n\n    addMinutes(startTime, 30);\n\n    setDate(d);\n  };\n\n  useEffect(() => {\n    onChange(computeStartEndDate());\n  }, [date, startTime, endTime]);\n\n  useEffect(() => {\n    setEndTime(addMinutes(startTime, 30));\n  }, [startTime]);\n\n  const computeStartEndDate = () => {\n    const dateWithResetTime = getDateWithResetTime(date);\n    return {\n      dateStart: add(dateWithResetTime, {\n        hours: getHours(startTime),\n        minutes: getMinutes(startTime),\n      }),\n      dateEnd: add(dateWithResetTime, {\n        hours: getHours(endTime),\n        minutes: getMinutes(endTime),\n      }),\n    };\n  };\n\n  return (\n    <div className=\"input-date\">\n      <div className=\"field\">\n        <label htmlFor=\"event-title\">Дата</label>\n        <DatePicker\n          locale={ru}\n          dateFormat=\"dd MMMM, yyyy\"\n          selected={date}\n          onChange={(date) => handleChangeDate(date)}\n          monthsShown={3}\n          minDate={minDate}\n        />\n      </div>\n      <div className=\"field\">\n        <label htmlFor=\"event-title\">Начало</label>\n        <DatePicker\n          className=\"input-time\"\n          locale={ru}\n          selected={startTime}\n          onChange={(time) => setStartTime(time)}\n          showTimeSelect\n          showTimeSelectOnly\n          timeIntervals={15}\n          timeCaption=\"Время\"\n          dateFormat=\"H:mm\"\n          minTime={minTime}\n          maxTime={maxTime}\n        />\n      </div>\n      <i dangerouslySetInnerHTML={{ __html: \"&#8212;\" }}></i>\n      <div className=\"field\">\n        <label htmlFor=\"event-title\">Конец</label>\n        <DatePicker\n          className=\"input-time\"\n          locale={ru}\n          selected={endTime}\n          onChange={(time) => setEndTime(time)}\n          showTimeSelect\n          showTimeSelectOnly\n          timeIntervals={15}\n          timeCaption=\"Время\"\n          dateFormat=\"H:mm\"\n          minTime={addMinutes(startTime, 30)}\n          maxTime={maxTime}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default InputDate;\n","import \"./FormEvent.css\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../button/Button\";\nimport ParticipantSelect from \"../participant-select/ParticipantSelect\";\nimport RoomSelect from \"../room-select/RoomSelect\";\nimport InputDate from \"../input-date/InputDate\";\n\nimport { ReactComponent as CrossIcon } from \"../icons/cross.svg\";\n\nfunction FormEventView({\n  participantSelectOptions,\n  roomSelectOptions,\n  participantsLimit,\n  reactHookFormProps,\n  onSubmit,\n  isCreateMode,\n}) {\n  const {\n    control,\n    register,\n    handleSubmit,\n    errors,\n    controller: Controller,\n    watchParticipantList,\n  } = reactHookFormProps;\n\n  console.log(\"view render\");\n\n  return (\n    <form className=\"form-event\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"form-event__inner\">\n        <div className=\"form-event__header\">\n          <h2 className=\"form-event__header-title\">Новая встреча</h2>\n          <Link to=\"/\">\n            <Button className=\"btn--circle\">\n              <CrossIcon className=\"btn__icon\" />\n            </Button>\n          </Link>\n        </div>\n        <div className=\"form-event__col-left\">\n          <div className=\"field\">\n            <div className=\"field-info\">\n              <label htmlFor=\"title\">Тема</label>\n              <div className=\"invalid-feedback\">{errors?.title?.message}</div>\n            </div>\n            <input\n              className={errors?.title && \"is-invalid\"}\n              id=\"title\"\n              name=\"title\"\n              type=\"text\"\n              placeholder=\"О чем будете говорить?\"\n              ref={register}\n            />\n          </div>\n          <div className=\"field\">\n            <div className=\"field-info\">\n              <label htmlFor=\"participant-list\">\n                Участники ({watchParticipantList?.length || 0}/\n                {participantsLimit})\n              </label>\n              <div className=\"invalid-feedback\">\n                {errors?.participantList?.message}\n              </div>\n            </div>\n            <Controller\n              name=\"participantList\"\n              control={control}\n              render={({ value, onChange }) => (\n                <ParticipantSelect\n                  className={errors?.participantList && \"is-invalid\"}\n                  id=\"participant-list\"\n                  candidates={participantSelectOptions}\n                  selectedPeople={value}\n                  limit={participantsLimit}\n                  onSelectedItemsChange={({ selectedItems }) =>\n                    onChange(selectedItems)\n                  }\n                />\n              )}\n            />\n          </div>\n        </div>\n        <div className=\"form-event__col-right\">\n          <Controller\n            name=\"startEndDate\"\n            control={control}\n            render={({ value, onChange }) => (\n              <InputDate selectedDate={value} onChange={onChange} />\n            )}\n          />\n          <div className=\"field\">\n            <div className=\"field-info\">\n              <label htmlFor=\"room\">Комната</label>\n              <div className=\"invalid-feedback\">{errors?.room?.message}</div>\n            </div>\n            <Controller\n              name=\"room\"\n              control={control}\n              render={({ value, onChange }) => (\n                <RoomSelect\n                  className={errors?.room && \"is-invalid\"}\n                  selectedRoom={value}\n                  rooms={roomSelectOptions}\n                  onSelect={onChange}\n                />\n              )}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"form-event__footer\">\n        <Link to=\"/\">\n          <Button className=\"btn--gray\">Отмена</Button>\n        </Link>\n        <Button type=\"submitt\">\n          {isCreateMode ? \"Создать встречу\" : \"Изменить встречу\"}\n        </Button>\n      </div>\n    </form>\n  );\n}\n\nexport default FormEventView;\n","import { useEffect, useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport * as Yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport FormEventView from \"./FormEventView\";\nimport { addMinutes, set, isToday, isPast } from \"date-fns\";\n\nimport { pickedDateStartVar, pickedRoomVar } from \"../index\";\nimport workingHours from \"../utils/workingHours\";\n\nfunction FormEventContainer({\n  initialData,\n  participantSelectOptions,\n  roomSelectOptions,\n  onSubmit,\n  isCreateMode,\n}) {\n  console.log(\"initialData\", initialData);\n  console.log(\"participantSelectOptions\", participantSelectOptions);\n  console.log(\"roomSelectOptions\", roomSelectOptions);\n  console.log(\"onSubmit\", onSubmit);\n  console.log(\"pickedDateStartVar\", pickedDateStartVar());\n\n  const getInitialStartEndDate = () => {\n    const dateObj = initialData\n      ? {\n          dateStart: new Date(initialData.dateStart),\n          dateEnd: new Date(initialData.dateEnd),\n        }\n      : {\n          dateStart: pickedDateStartVar(),\n          dateEnd: addMinutes(pickedDateStartVar(), 30),\n        };\n\n    if (isPast(dateObj.dateStart)) {\n      dateObj.dateStart = workingHours.getCorrectDate();\n    }\n\n    return dateObj;\n  };\n\n  const defaultValues = {\n    title: initialData?.title ?? \"\",\n    participantList: initialData?.users ?? [],\n    room: initialData?.room || pickedRoomVar() || null,\n    startEndDate: getInitialStartEndDate(),\n  };\n\n  //очистить выбранные дату и комнату после ухода из формы\n  useEffect(() => {\n    return () => {\n      pickedRoomVar(null);\n      pickedDateStartVar(\n        set(pickedDateStartVar(), {\n          hours: workingHours.start.getHours(),\n          minutes: workingHours.end.getMinutes(),\n        })\n      );\n      console.log(\"reset form\", pickedDateStartVar());\n    };\n  }, []);\n\n  const [participantsLimit, setParticipantsLimit] = useState(0);\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Укажите название встречи\"),\n    participantList: Yup.array()\n      .min(1, \"Выберите участников\")\n      .max(participantsLimit, \"Превышена вместимость комнаты\"),\n    room: Yup.mixed().required(\"Выберите комнату\"),\n  });\n\n  const { control, register, errors, handleSubmit, watch, reset } = useForm({\n    resolver: yupResolver(validationSchema),\n    defaultValues,\n  });\n\n  useEffect(() => {\n    reset(defaultValues);\n  }, [initialData]);\n\n  const watchParticipantList = watch(\"participantList\");\n  const watchRoom = watch(\"room\");\n\n  useEffect(() => {\n    watchRoom && setParticipantsLimit(watchRoom.capacity);\n  }, [watchRoom]);\n\n  const prepareData = ({ title, startEndDate, participantList, room }) => {\n    const input = {\n      title,\n      dateStart: startEndDate.dateStart,\n      dateEnd: startEndDate.dateEnd,\n    };\n\n    const variables = {\n      input,\n    };\n\n    if (isCreateMode) {\n      variables.usersIds = participantList.map((p) => p.id);\n      variables.roomId = room.id;\n    } else {\n      variables.id = initialData.id;\n    }\n\n    onSubmit(variables);\n  };\n\n  return (\n    <FormEventView\n      participantSelectOptions={participantSelectOptions}\n      roomSelectOptions={roomSelectOptions}\n      participantsLimit={participantsLimit}\n      onSubmit={prepareData}\n      isCreateMode={isCreateMode}\n      reactHookFormProps={{\n        controller: Controller,\n        control,\n        register,\n        handleSubmit,\n        errors,\n        watchParticipantList,\n      }}\n    />\n  );\n}\n\nexport default FormEventContainer;\n","import { Modal } from 'react-responsive-modal';\r\nimport Button from '../../button/Button';\r\nimport {\r\n  formatDate,\r\n  formatTimeStartEnd,\r\n  formatRoom,\r\n} from \"../../utils/formatEventData\";\r\n\r\nexport default function EventSuccess({\r\n    open, \r\n    event,\r\n    hide,\r\n    onAccept,\r\n    action\r\n}) {\r\n    const getFormattedEventDate = (event) => {\r\n        const { dateStart: dateStartISO, dateEnd: dateEndISO } = event;\r\n        \r\n        const dateStart = new Date(dateStartISO);\r\n        const dateEnd = new Date(dateEndISO);\r\n\r\n        return `${formatDate(dateStart)}, ${formatTimeStartEnd(\r\n            dateStart,\r\n            dateEnd\r\n        )}`;\r\n    };\r\n    \r\n    const getFormattedEventRoom = (event) => {\r\n        const { room } = event;\r\n        return `${formatRoom(room)} ${\"\\u00B7\"} ${room.floor} этаж`;\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            animationDuration={150}\r\n            center\r\n            showCloseIcon={false}  \r\n            classNames={{\r\n                overlay: 'custom-modal-overlay',\r\n                modal: 'custom-modal',\r\n            }}\r\n        >   <div className=\"custom-modal-container\">\r\n                <div className=\"form-event__modal-emoji\" role=\"img\" aria-label=\"party popper\">\r\n                    🎉\r\n                </div>\r\n                <h2 className=\"form-event__modal-title\">\r\n                   {action === 'create' ? 'Встреча создана!' : 'Встреча обновлена!'}\r\n                </h2>\r\n                <div className=\"form-event__modal-datatime\">\r\n                    {event&&getFormattedEventDate(event)}\r\n                </div>\r\n                <div className=\"form-event__modal-room\">\r\n                    {event&&getFormattedEventRoom(event)}\r\n                </div>\r\n                <Button onClick={() => {\r\n                    hide()\r\n                    onAccept()\r\n                }}>ОК</Button>\r\n            </div>\r\n      </Modal>\r\n    )\r\n}","import { useHistory, useParams } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {\n  CREATE_EVENT,\n  FETCH_DATA_FOR_EVENT_FORM,\n  FETCH_EVENTS_BY_DATE,\n  GET_EVENT,\n  UPDATE_EVENT,\n} from \"../queries.js\";\n\nimport { set, parseISO, endOfDay } from \"date-fns\";\n\nimport FormEventContainer from \"./FormEventContainer\";\n\nimport useModalService from '../hooks/useModalSevice';\n\n\n\nfunction FormEventApollo() {\n  const ModalService = useModalService();\n  const {\n    data: optionsData,\n    error: errorFetchData,\n    loading: loadingFetchData,\n  } = useQuery(FETCH_DATA_FOR_EVENT_FORM);\n\n  const history = useHistory()\n\n  const [\n    createEventMutation,\n    {\n      loading: pendingCreateEvent,\n      error: errorCreateEvent,\n      data: createEventSuccess,\n    },\n  ] = useMutation(CREATE_EVENT, {\n    onCompleted: ({createEvent: createdEvent}) => ModalService.createdEventSuccess(createdEvent, () => history.push('/'))\n  });\n\n  const [\n    updateEventMutation,\n    {\n      loading: pendingUpdateEvent,\n      error: errorUpdateEvent,\n      data: updateEventSuccess,\n    },\n  ] = useMutation(UPDATE_EVENT, {\n    onCompleted: ({updateEvent: updatedEvent}) => ModalService.updatedEventSuccess(updatedEvent, () => history.push('/'))\n  });\n\n  const { id } = useParams();\n  const isCreateMode = !id;\n\n  const {\n    data: eventData,\n    error: errorGetExistedEvent,\n    loading: loadingExistedEvent,\n  } = useQuery(GET_EVENT, {\n    skip: isCreateMode,\n    variables: {\n      id,\n    }\n  });\n\n  if (\n    loadingFetchData ||\n    pendingCreateEvent ||\n    loadingExistedEvent ||\n    pendingUpdateEvent\n  )\n    return \"Loading...\";\n\n  if (\n    errorFetchData ||\n    errorCreateEvent ||\n    errorGetExistedEvent ||\n    errorUpdateEvent\n  )\n    return \"Прозошла ошибка\";\n\n  const createEvent = (variables) => {\n    createEventMutation({\n      variables,\n      update: (cache, { data: { createEvent: createdEvent } }) => {\n        console.log(createdEvent);\n        try {\n          const date = endOfDay(parseISO(createdEvent.dateStart));\n          console.log(\n            \"date, которая должна быть такой же, как аргумент последнего запроса\",\n            date\n          );\n          const data = cache.readQuery({\n            query: FETCH_EVENTS_BY_DATE,\n            variables: {\n              date,\n            },\n          });\n\n          if (data === null) return;\n\n          cache.writeQuery({\n            query: FETCH_EVENTS_BY_DATE,\n            variables: {\n              date,\n            },\n            data: {\n              eventsOnDate: [...data.eventsOnDate, createdEvent],\n            },\n          });\n          console.log(cache);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    });\n  };\n\n  const updateEvent = (variables) => {\n    updateEventMutation({\n      variables,\n      update: (cache, { updateEvent: updatedEvent }) => {\n        try {\n          const date = set(parseISO(updatedEvent.dateStart), {\n            hours: 0,\n            minutes: 0,\n          });\n\n          let data = cache.readQuery({\n            query: FETCH_EVENTS_BY_DATE,\n            variables: { date },\n          });\n\n          if (data === null) return;\n\n          cache.writeQuery({\n            query: FETCH_EVENTS_BY_DATE,\n            variables: { date },\n            data: {\n              eventsOnDate: [...data.eventsOnDate, updatedEvent],\n            },\n          });\n        } catch (e) {\n          console.error(e);\n        }\n      },\n    });\n  };\n\n  const handleSubmit = (variables) => {\n    console.log(variables);\n    isCreateMode ? createEvent(variables) : updateEvent(variables);\n  };\n\n  const { users, rooms } = optionsData;\n\n  return (\n    <FormEventContainer\n      initialData={eventData?.event}\n      participantSelectOptions={users}\n      roomSelectOptions={rooms}\n      onSubmit={handleSubmit}\n      isCreateMode={isCreateMode}\n    />\n  );\n}\n\nexport { FormEventApollo };\n","import { useState } from 'react';\r\nimport { useModal } from 'react-modal-hook';\r\nimport EventSuccess from './EventSuccess';\r\n\r\nexport default function useModalService() {\r\n    const [eventSuccProps, setEventSuccProps] = useState(null);\r\n    const [showSuccessEvent, hideSuccessEvent] = useModal(\r\n        ({in: open}) => <EventSuccess \r\n            open={open} \r\n            event={eventSuccProps.event}\r\n            onAccept={eventSuccProps.onAccept}\r\n            hide={hideSuccessEvent}\r\n            action={eventSuccProps.action}\r\n        />,\r\n        [eventSuccProps]\r\n    )\r\n\r\n    const eventSucc = (action, event, onAccept) => {\r\n        setEventSuccProps(p => ({...p, event, onAccept, action}))\r\n        showSuccessEvent()\r\n    }\r\n\r\n    return {\r\n        createdEventSuccess(event, onAccept) {\r\n            eventSucc('create', event, onAccept)\r\n        },\r\n        updatedEventSuccess(event, onAccept) {\r\n            eventSucc('update', event, onAccept)\r\n        }\r\n    }\r\n}\r\n","import \"./App.css\";\nimport Header from \"./header/Header\";\nimport Scedule from \"./scedule/Scedule\";\nimport { FormEvent } from \"./form-event\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app scroll-listen-aside\">\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Scedule />\n          </Route>\n          <Route path=\"/event/add\">\n            <FormEvent />\n          </Route>\n          <Route path=\"/event/edit/:id\">\n            <FormEvent />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport \"react-responsive-modal/styles.css\";\nimport { ModalProvider } from 'react-modal-hook';\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  makeVar,\n} from \"@apollo/client\";\nimport workingHours from \"./utils/workingHours\";\nimport { TransitionGroup } from \"react-transition-group\";\n\nexport const pickedDateStartVar = makeVar(workingHours.getCorrectDate());\n\nexport const pickedRoomVar = makeVar(null);\n\nconst client = new ApolloClient({\n  uri: \"http://45.141.78.194:3060/graphql\",\n  cache: new InMemoryCache({\n    typePolicies: {\n      Event: {\n        fields: {\n          dateStart: {\n            read(dateISO) {\n              return new Date(dateISO);\n            },\n          },\n          dateEnd: {\n            read(dateISO) {\n              return new Date(dateISO);\n            },\n          },\n        },\n      },\n    },\n  }),\n  connectToDevTools: true,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <ModalProvider rootComponent={TransitionGroup}>\n        <App />\n      </ModalProvider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}