/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}.btn{border:none;margin:0;padding:0;width:252px;height:56px;border-radius:50px;cursor:pointer;overflow:visible;background:#ffe100;color:#000;font-size:18px;line-height:normal;-webkit-font-smoothing:inherit;-moz-osx-font-smoothing:inherit;-webkit-appearance:none;transition:box-shadow .3s}.btn:focus,.btn:hover{outline:0;border:none;box-shadow:0 0 10px #ffe100;transition:box-shadow .3s}.btn-cross{display:block;position:absolute;top:10px;right:20px;color:#fff;width:50px;height:50px;font-size:50px;cursor:pointer;z-index:10010;background:0 0}.btn-cross:focus,.btn-cross:hover{box-shadow:none;transition:text-shadow .15s ease-out;text-shadow:0 0 10px #fff}.hamburger{background:0 0;padding:15px 15px;display:inline-block;cursor:pointer;transition-property:opacity,filter;transition-duration:.15s;transition-timing-function:linear;font:inherit;color:inherit;text-transform:none;border:0;margin:0;overflow:visible}.hamburger:hover{opacity:.7}.hamburger.is-active:hover{opacity:.7}.hamburger.is-active .hamburger-inner,.hamburger.is-active .hamburger-inner::after,.hamburger.is-active .hamburger-inner::before{background:#fff}.hamburger-box{width:40px;height:24px;display:inline-block;position:relative}.hamburger-inner{display:block;top:50%;margin-top:-2px}.hamburger-inner,.hamburger-inner::after,.hamburger-inner::before{background:#fff;width:40px;height:4px;border-radius:4px;position:absolute;transition-property:transform;transition-duration:.15s;transition-timing-function:ease}.hamburger-inner::after,.hamburger-inner::before{content:"";display:block}.hamburger-inner::before{top:-10px}.hamburger-inner::after{bottom:-10px}.hamburger--squeeze .hamburger-inner{transition-duration:75ms;transition-timing-function:cubic-bezier(.55,.055,.675,.19)}.hamburger--squeeze .hamburger-inner::before{transition:top 75ms .12s ease,opacity 75ms ease}.hamburger--squeeze .hamburger-inner::after{transition:bottom 75ms .12s ease,transform 75ms cubic-bezier(.55,.055,.675,.19)}.hamburger--squeeze.is-active .hamburger-inner{transform:rotate(45deg);transition-delay:.12s;transition-timing-function:cubic-bezier(.215,.61,.355,1)}.hamburger--squeeze.is-active .hamburger-inner::before{top:0;opacity:0;transition:top 75ms ease,opacity 75ms .12s ease}.hamburger--squeeze.is-active .hamburger-inner::after{bottom:0;transform:rotate(-90deg);transition:bottom 75ms ease,transform 75ms .12s cubic-bezier(.215,.61,.355,1)}header{text-align:center;position:absolute;top:0;left:0;right:0;padding:40px 15px;z-index:1}@media (max-width:1024px){header{padding:0;text-align:right}}.adaptive-menu{display:grid;grid-template-columns:1fr 1fr 1fr 1fr}@media (max-width:1024px){.adaptive-menu{display:block;background:#000;height:100vh;position:absolute;top:-100vh;right:0;left:0;transition:transform .3s cubic-bezier(.165,.84,.44,1)}}.adaptive-menu.is-open{transform:translateY(100%);transition:transform .3s cubic-bezier(.165,.84,.44,1)}nav{grid-column:2/4}nav ul{margin:0;padding:0;list-style:none;display:flex;justify-content:center}@media (max-width:1024px){nav ul{flex-direction:column;justify-content:center;text-align:center;height:70vh}}nav ul li{padding:0 18px}@media (max-width:1024px){nav ul li{padding:20px 0}}nav ul li a{color:#fff;font-weight:700;text-transform:uppercase;font-size:15px;text-decoration:none}nav ul li a:hover{transition:text-shadow .15s ease-out;text-shadow:0 0 10px #fff}nav ul li:active{color:#fff}.hamburger-container{display:none}@media (max-width:1024px){.hamburger-container{display:block}}.contacts{grid-column:4/5;display:flex;flex-direction:column;align-items:center}.contacts a{padding:0 0 15px 0;font-weight:400;font-size:20px;color:#fff}footer{background:#111;overflow:hidden;display:flex;justify-content:center}footer p{color:#fff}.overlay{position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,.6);display:none;justify-content:center;align-items:center;width:100vw;height:100vh;z-index:999;cursor:pointer}.overlay .modal-inner{cursor:auto;background:#fff;max-width:560px;height:420px;padding:40px 45px}.overlay .modal-inner h2{margin:0}.overlay .modal-inner form{display:flex;flex-direction:column}.overlay .modal-inner form input{border-radius:5px;background:#efefef;line-height:1.33;border:0 none;outline:0;padding:20px;height:56px;color:#000;margin-top:20px}.overlay .modal-inner form button{width:100%;display:block;margin:20px auto 15px}.overlay .modal-inner form p{text-align:center}.overlay .modal-inner form p:last-child{font-size:14px}.intro{height:100vh;background:url(../img/img1.jpg) center center no-repeat;background-size:cover;position:relative;display:flex;flex-direction:column;align-items:center;justify-content:center}.intro__content{width:850px;position:relative;text-align:center}@media (max-width:768px){.intro__content{width:600px}}@media (max-width:620px){.intro__content{width:320px;padding-bottom:100px}}.intro:before{content:"";position:absolute;top:0;bottom:0;right:0;left:0;background:rgba(4,27,56,.7)}.intro h1{color:#fff;font-size:46px}@media (max-width:1024px){.intro h1{font-size:40px}}@media (max-width:768px){.intro h1{font-size:28px}}@media (max-width:620px){.intro h1{line-height:1.2;font-size:26px;margin-bottom:70px}}.why-item{flex:1 0 250px;text-align:center;padding-top:50px}.why-item img{border-radius:50%}.why-item P{font-size:20px}.services{max-width:1020px!important;justify-content:center;align-content:space-between}.services-item{padding-top:40px;flex:0 0 300px;margin:0 20px;border-radius:5px}.services-item p{font-size:18px;background:#fff;margin:-3px 0 0;padding:20px 15px;text-align:center;height:90px}.license .glide__arrow{background:rgba(79,79,79,.7)}.callback{text-align:center}.callback p{color:#777;margin:0 auto;max-width:600px;font-size:24px;font-weight:300;line-height:1.5;position:relative}@media (max-width:620px){.callback p{font-size:18px}}.callback .arrow-icon--curve{position:absolute;left:10%;top:160%;color:#000}@media (max-width:620px){.callback .arrow-icon--curve{display:none}}.callback .arrow-icon{position:absolute;left:50%;right:0;top:130%;transform:translateX(-50%);display:none}@media (max-width:620px){.callback .arrow-icon{display:block}}.callback .btn{margin-top:70px}.process .container{display:block!important}.process .step{display:flex;justify-content:flex-end;align-items:baseline;flex-wrap:wrap;margin-bottom:25px}.process .step>div{flex:1 1 calc(100% - 50px)}.process .step>.step__nmb{flex:0 0 50px;height:50px;background:#ffe100;line-height:50px;text-align:center;border-radius:50%;font-weight:700}.process .step__header{padding-left:20px;font-weight:700}.process .step__des{padding-left:70px}.process .process__btn{text-align:center;margin-top:50px}.location__right{flex:0 1 60%}@media (max-width:620px){.location__right{padding-top:25px;flex:0 1 420px;height:300px}}.location__left{flex:0 1 40%}@media (max-width:620px){.location__left{flex:0 1 100%}.location__left p{margin:6px 0;font-size:14px}}.location__header{text-align:left}.location #map{overflow:hidden;width:100%;height:100%}.questions{background:url(../img/questions.jpg) no-repeat;background-size:cover;position:relative}.questions p{text-align:center;max-width:400px;margin:0 auto;line-height:1.3;font-size:18px;font-weight:300;color:#fff;margin-bottom:40px}@media (max-width:620px){.questions p{font-size:16px;max-width:300px}}.questions form,.questions p{position:relative;z-index:1}.questions h2{position:relative;z-index:1;color:#fff}.questions:after{content:"";display:block;position:absolute;top:0;left:0;right:0;bottom:0;background:#574832d4}.questions form{display:flex;flex-direction:column;margin:0 auto;max-width:540px}.questions form button,.questions form input,.questions form p,.questions form textarea{margin-bottom:20px}.questions form input::-moz-placeholder,.questions form textarea::-moz-placeholder{font-family:Roboto,sans-serif}.questions form input:-ms-input-placeholder,.questions form textarea:-ms-input-placeholder{font-family:Roboto,sans-serif}.questions form input::placeholder,.questions form textarea::placeholder{font-family:Roboto,sans-serif}.questions form input,.questions form textarea{border-radius:5px;background:#fff;line-height:1.33;border:0 none;outline:0;padding:20px}.questions form input{height:56px;color:#000}.questions form button{display:block;margin:0 auto 20px}.questions form p{font-size:14px}.glide{position:relative;width:100%;box-sizing:border-box}.glide *{box-sizing:inherit}.glide__track{overflow:hidden}.glide__slides{position:relative;width:100%;list-style:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;transform-style:preserve-3d;touch-action:pan-Y;overflow:hidden;padding:0;white-space:nowrap;display:flex;flex-wrap:nowrap;will-change:transform}.glide__slides--dragging{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.glide__slide{width:100%;height:100%;flex-shrink:0;white-space:normal;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-touch-callout:none;-webkit-tap-highlight-color:transparent}.glide__slide a{-webkit-user-select:none;user-select:none;-webkit-user-drag:none;-moz-user-select:none;-ms-user-select:none}.glide__arrows{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.glide__bullets{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.glide--rtl{direction:rtl}.glide__arrow{background:0 0;position:absolute;display:block;top:50%;z-index:2;color:#fff;text-transform:uppercase;padding:9px 12px;border:2px solid rgba(255,255,255,.5);border-radius:4px;box-shadow:0 .25em .5em 0 rgba(0,0,0,.1);text-shadow:0 .25em .5em rgba(0,0,0,.1);opacity:1;cursor:pointer;transition:opacity 150ms ease,border .3s ease-in-out;transform:translateY(-50%);line-height:1}.glide__arrow:focus{outline:0}.glide__arrow:hover{border-color:#fff}.glide__arrow--left{left:2em}.glide__arrow--right{right:2em}.glide__arrow--disabled{opacity:.33}.glide__bullets{position:absolute;z-index:2;bottom:2em;left:50%;display:inline-flex;list-style:none;transform:translateX(-50%)}.glide__bullet{background:rgba(255,255,255,.5);width:9px;height:9px;padding:0;border-radius:50%;border:2px solid transparent;transition:all .3s ease-in-out;cursor:pointer;line-height:0;box-shadow:0 .25em .5em 0 rgba(0,0,0,.1);margin:0 .25em}.glide__bullet:focus{outline:0}.glide__bullet:focus,.glide__bullet:hover{background:rgba(255,255,255,.5);border:2px solid #fff}.glide__bullet--active{background:#fff}.glide--swipeable{cursor:grab;cursor:-webkit-grab}.glide--dragging{cursor:grabbing;cursor:-webkit-grabbing}*,::after,::before{box-sizing:inherit}html{box-sizing:border-box}body{margin:0;font-family:Roboto,Arial,sans-serif;position:relative}img{max-width:100%}a{text-decoration:none}section{padding:70px 25px}.container{max-width:920px;display:flex;margin:0 auto;flex-wrap:wrap}.bg-gray{background:#efefef}.scroll-blocked{overflow:hidden}h2{margin:0;margin-bottom:40px;text-align:center;font-size:42px}@media (max-width:620px){h2{font-size:22px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
